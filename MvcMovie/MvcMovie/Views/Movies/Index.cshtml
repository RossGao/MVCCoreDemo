@model MvcMovie.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <!-- Form tag helper. When form is submitted the 'Index' action is called. -->
    <p>
        <!-- method="get" so the url will include query string. -->
        <!-- 'asp-for' is Model's property name, 'asp-item' is Model's options for the select list. -->
        <select asp-for="MovieGenre" asp-items="Model.Genres">  <!-- movieGenre is property name and also the query string parameter name passed to action. -->
            <option value="">All</option>                      
        </select>

        Title: <input type="text" name="searchString" />
        <input type="submit" name="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |         <!-- Item is strongly typed so has compile type check and IntelliSense -->
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |   <!-- AnchorTagHelper help to create href link to call aciton with parameter -->
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
